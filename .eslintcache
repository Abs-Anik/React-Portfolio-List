[{"F:\\my-portfolio\\src\\index.js":"1","F:\\my-portfolio\\src\\reportWebVitals.js":"2","F:\\my-portfolio\\src\\App.js":"3"},{"size":547,"mtime":1607361860378,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":6563,"mtime":1607447541534,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"mczmba",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"F:\\my-portfolio\\src\\index.js",[],["16","17"],"F:\\my-portfolio\\src\\reportWebVitals.js",[],"F:\\my-portfolio\\src\\App.js",["18","19"],"import React from 'react';\nimport \"./App.css\";\nimport WOW from 'wowjs';\nclass App extends React.Component {\n  state = {\n    welcomeMessage: \"Welcome to My Mini Portfolio List Project\",\n    taskList: [],\n    title: \"\",\n    description: \"\",\n    date: \"\",\n    status: \"\",\n    url: \"\",\n    profileImg: \"https://scontent.fdac7-1.fna.fbcdn.net/v/t1.0-9/67822591_2303795803075030_1825684623506538496_o.jpg?_nc_cat=108&ccb=2&_nc_sid=09cbfe&_nc_ohc=fjUadyZPCPMAX9n4par&_nc_ht=scontent.fdac7-1.fna&oh=52e9a79522764c4f588223aa21e9e22f&oe=5FF3C65B\"\n  };\n\n  componentDidMount() {\n    this.initializeData();\n    new WOW.WOW().init();\n  }\n\n  initializeData = () => {\n    const data = [];\n\n    this.setState({\n      taskList: data\n    });\n  };\n\n  submitTask = (e) => {\n    e.preventDefault();\n    if (this.state.title === \"\") {\n      alert(\"Please give a title\");\n      return false;\n    }\n    if (this.state.description === \"\") {\n      alert(\"Please give a description\");\n      return false;\n    }\n\n    if (this.state.date === \"\") {\n      alert(\"Please select date\");\n      return false;\n    }\n\n    if (this.state.status === \"\") {\n      alert(\"Please select status\");\n      return false;\n    }\n\n    if (this.state.url === \"\") {\n      alert(\"Please give a image url link\");\n      return false;\n    }\n\n    let data = this.state.taskList;\n\n    const task = {\n      title: this.state.title,\n      description: this.state.description,\n      date: this.state.date,\n      status: this.state.status,\n      url: this.state.url,\n    };\n    data.unshift(task);\n\n    this.setState({\n      taskList: data,\n      title: \"\",\n      description: \"\",\n      date: \"\",\n      status: \"\",\n      url: \"\"\n    });\n  };\n\n  deleteTask = (index) => {\n    let data = this.state.taskList;\n\n    data.splice(index, 1);\n    this.setState({\n      taskList: data\n    });\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"container\" style={{ backgroundColor: '#1ABC9C' }}>\n        <div className=\"row mb-2\">\n          <div className=\"container\">\n            <div className=\"col-sm-12\" style={{ backgroundColor: '#2C3E50', boxShadow: '-5px 5px 10px rgba(0,0,0,0.2), 5px 5px 10px rgba(0,0,0,0.2)' }}>\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <img src={this.state.profileImg} alt=\"Md. Abu Bakkar Siddik\" style={{ height: '200px', width: \"200px\", margin: '20px 0px 50px 0px', borderRadius: '50%' }} />\n              </div>\n              <h3 style={{ color: '#fff', textAlign: 'center', marginTop: '-50px' }}>Md. Abu Bakkar Siddik</h3>\n              <p style={{ color: '#fff', textAlign: 'center' }}>\n                <marquee>{this.state.welcomeMessage}</marquee>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-8\">\n            <div className=\"row\">\n              {this.state.taskList.map((task, index) => (\n                <div className=\"col-sm-6 mb-4\">\n                  <div className=\"card\" style={{ boxShadow: '-5px 5px 10px rgba(0,0,0,0.2), 5px 5px 10px rgba(0,0,0,0.2)' }} key={index}>\n                    <img src={task.url} alt=\"image\" className=\"card-img-top imageAnimation\" style={{ height: '250px' }} />\n                    <div className=\"card-body\">\n                      <h4 className=\"card-title text-center wow flipInY\" data-wow-iteration=\"10\">{task.title}</h4>\n                      <p className=\"card-text\">{task.description}</p>\n                      <p className=\"card-text\">\n\n                        Project Status {task.status}\n                        <p className=\"card-text\">{task.date}</p>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"col-sm-4 mb-4\">\n            <div className=\"card\" style={{ boxShadow: '-5px 5px 10px rgba(0,0,0,0.2), 5px 5px 10px rgba(0,0,0,0.2)' }}>\n              <div className=\"card-header\">\n                <span> Add New List </span>\n              </div>\n              <form onSubmit={this.submitTask}>\n                <div className=\"card-body\">\n                  <div className=\"form-group\">\n                    <label for=\"title\">Title</label>\n                    <input type=\"text\" id=\"title\" className=\"form-control\" placeholder=\"Enter Title\" value={this.state.title} onInput={(e) => this.setState({ title: e.target.value })} />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label for=\"description\">Description</label>\n                    {/* <input type=\"text\" id=\"description\" className=\"form-control\" placeholder=\"Enter Description\" value={this.state.description} onInput={(e) => this.setState({ description: e.target.value })} /> */}\n                    <textarea className=\"form-control\" id=\"description\" cols=\"30\" rows=\"5\" placeholder=\"Enter Description\" value={this.state.description} onInput={(e) => this.setState({ description: e.target.value })}></textarea>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label for=\"date\">Project Complete Date</label>\n                    <input type=\"date\" id=\"date\" className=\"form-control\" value={this.state.date} onInput={(e) => this.setState({ date: e.target.value })} />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label for=\"status\">Project Status</label>\n                    <select className=\"form-control\" id=\"status\" value={this.state.status} onChange={(e) => this.setState({ status: e.target.value })}>\n                      <option value=\"\">--Select--</option>\n                      <option value=\"Complete\">Complete</option>\n                      <option value=\"Not Complete\">Not Complete</option>\n                      <option value=\"Partially Complete\">Partially Complete</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label for=\"url\">Image Url</label>\n                    <input type=\"text\" id=\"url\" className=\"form-control\" placeholder=\"Enter Image url\" value={this.state.url} onInput={(e) => this.setState({ url: e.target.value })} />\n                  </div>\n                  <button className=\"btn btn-info mt-3 mb-3\">Save</button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <p style={{ color: '#fff', fontWeight: \"bolder\", marginLeft: \"40%\" }}>@ Md. Abu Bakkar Siddik 2020</p>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":98,"column":17,"nodeType":"26","endLine":98,"endColumn":26},{"ruleId":"27","severity":1,"message":"28","line":109,"column":21,"nodeType":"26","endLine":109,"endColumn":123},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]